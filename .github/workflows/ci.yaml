name: CI pipeline
on: [push]

env:
  GH_TOKEN: ${{ github.token }}
  FLAVOR: prod

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - run: dart format --set-exit-if-changed .
      - run: flutter pub get
      - run: flutter analyze

  test:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - uses: hrishikesh-kadam/setup-lcov@v1
      - run: flutter pub get
      - run: flutter test --coverage
      - run: ci/test/extract_coverage.sh
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './pages'

  publish-coverage:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [test]
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/configure-pages@v5
      - id: deployment
        uses: actions/deploy-pages@v4

  build-macos:
    runs-on: macos-latest
    needs: [test]
    outputs:
      release_name: ${{ steps.env.outputs.release_name }}
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.GAMEPADS_PRIVATE_KEY }}
            ${{ secrets.MP_AUDIO_STREAM_PRIVATE_KEY }}
      - run: ci/build/prepare.sh
      - run: ci/build/macos/prepare.sh
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      - id: env
        run: ci/build/env.sh
      - run: ci/build/macos/build.sh
        env:
          FLAVOR: ${{ steps.env.outputs.flavor }}
      - run: mv ${{ steps.env.outputs.dist_path }}/*.dmg ./${{ steps.env.outputs.macos_artifact }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.env.outputs.macos_artifact }}
          path: ${{ steps.env.outputs.macos_artifact }}
          if-no-files-found: error

  build-linux:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.GAMEPADS_PRIVATE_KEY }}
            ${{ secrets.MP_AUDIO_STREAM_PRIVATE_KEY }}
      - run: ci/build/prepare.sh
      - run: ci/build/linux/prepare.sh
      - id: env
        run: ci/build/env.sh
      - run: ci/build/linux/build.sh
        env:
          FLAVOR: ${{ steps.env.outputs.flavor }}
      - uses: actions/cache/save@v4
        with:
          path: build/linux/x64/release/bundle
          key: linux
      - run: |
          mv ${{ steps.env.outputs.dist_path }}/*.deb ./${{ steps.env.outputs.linux_deb_artifact }}
          mv ${{ steps.env.outputs.dist_path }}/*.rpm ./${{ steps.env.outputs.linux_rpm_artifact }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.env.outputs.linux_deb_artifact }}
          path: ${{ steps.env.outputs.linux_deb_artifact }}
          if-no-files-found: error
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.env.outputs.linux_rpm_artifact }}
          path: ${{ steps.env.outputs.linux_rpm_artifact }}
          if-no-files-found: error

  build-linux-flatpak:
    runs-on: ubuntu-latest
    needs: [test, build-linux]
    container:
      image: ghcr.io/andyholmes/flatter/freedesktop:24.08
      options: --privileged
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache/restore@v4
        with:
          path: build/linux/x64/release/bundle
          key: linux
      - uses: actions/checkout@v4
        with:
          repository: jpjonte/flatpak
          ssh-key: ${{ secrets.FLATPAK_PRIVATE_KEY }}
          ref: main
          path: flatpak
      - if: startsWith(github.ref, 'refs/tags/')
        run: ln -s flatpak/stable repo
      - if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
        run: ln -s flatpak/nightly repo
      - id: gpg-key
        run: ci/build/linux/select_gpg_key.sh
        env:
          FLATPAK_STABLE_GPG_PRIVATE_KEY: ${{ secrets.FLATPAK_STABLE_GPG_PRIVATE_KEY }}
          FLATPAK_STABLE_GPG_PASSPHRASE: ${{ secrets.FLATPAK_STABLE_GPG_PASSPHRASE }}
          FLATPAK_NIGHTLY_GPG_PRIVATE_KEY: ${{ secrets.FLATPAK_NIGHTLY_GPG_PRIVATE_KEY }}
          FLATPAK_NIGHTLY_GPG_PASSPHRASE: ${{ secrets.FLATPAK_NIGHTLY_GPG_PASSPHRASE }}
      - id: gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ steps.gpg-key.outputs.gpg_private_key }}
          passphrase: ${{ steps.gpg-key.outputs.gpg_passphrase }}
      - uses: andyholmes/flatter@main
        with:
          files: linux/packaging/dev.jpj.NESd.json
          arch: x86_64
          gpg-sign: ${{ steps.gpg.outputs.fingerprint }}
          upload-bundles: true
          cache-key: flatter-${{ github.sha }}
      - uses: actions/cache/save@v4
        with:
          path: flatpak/stable
          key: flatpak-stable-${{ github.sha }}
      - uses: actions/cache/save@v4
        with:
          path: flatpak/nightly
          key: flatpak-nightly-${{ github.sha }}

  build-windows:
    runs-on: windows-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - run: ci/build/windows/prepare.ps1
      - id: env
        shell: bash
        run: |
          alias yq="/C/ProgramData/chocolatey/lib/yq/tools/yq.exe"
          ci/build/env.sh
      - run: ci/build/windows/build.ps1
        env:
          FLAVOR: ${{ steps.env.outputs.flavor }}
      - uses: thedoctor0/zip-release@0.7.5
        with:
          directory: ${{ steps.env.outputs.windows_path }}
          filename: ${{ steps.env.outputs.windows_artifact }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.env.outputs.windows_artifact }}
          path: ${{ steps.env.outputs.windows_path }}/${{ steps.env.outputs.windows_artifact }}
          if-no-files-found: error

  build-android:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - run: ci/build/prepare.sh
      - run: ci/build/android/prepare.sh
        env:
          KEY_STORE_BASE64: ${{ secrets.ANDROID_KEY_STORE }}
          KEY_PROPERTIES: ${{ secrets.ANDROID_KEY_PROPERTIES }}
      - id: env
        run: ci/build/env.sh
      - run: ci/build/android/build.sh
        env:
          FLAVOR: ${{ steps.env.outputs.flavor }}
      - run: mv ${{ steps.env.outputs.android_path }} ./${{ steps.env.outputs.android_artifact }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.env.outputs.android_artifact }}
          path: ${{ steps.env.outputs.android_artifact }}
          if-no-files-found: error

  release_nightly:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [build-macos, build-linux, build-linux-flatpak, build-windows, build-android]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: jpjonte/flatpak
          ssh-key: ${{ secrets.FLATPAK_PRIVATE_KEY }}
          ref: main
          path: flatpak
      - uses: actions/cache/restore@v4
        with:
          path: flatpak/nightly
          key: flatpak-nightly-${{ github.sha }}
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Update NESd nightly
          commit_user_name: NESd CI Pipeline
          commit_user_email: nesd@jpj.dev
          commit_author: NESd CI Pipeline <nesd@jpj.dev>
          repository: flatpak
          skip_fetch: true
          skip_checkout: true
      - id: env
        run: ci/release/extract_changelog_nightly.sh
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true
      - run: gh release delete nightly --cleanup-tag -y
      - uses: ncipollo/release-action@v1
        with:
          artifacts: artifacts/*
          name: NESd nightly
          tag: nightly
          body: ${{ steps.env.outputs.changes }}
          artifactErrorsFailBuild: true
          prerelease: true
          allowUpdates: true
          removeArtifacts: true

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [build-macos, build-linux, build-linux-flatpak, build-windows, build-android]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: jpjonte/flatpak
          ssh-key: ${{ secrets.FLATPAK_PRIVATE_KEY }}
          ref: main
          path: flatpak
      - uses: actions/cache/restore@v4
        with:
          path: flatpak/stable
          key: flatpak-stable-${{ github.sha }}
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Update NESd stable
          commit_user_name: NESd CI Pipeline
          commit_user_email: nesd@jpj.dev
          commit_author: NESd CI Pipeline <nesd@jpj.dev>
          repository: flatpak
          skip_fetch: true
          skip_checkout: true
      - id: env
        run: ci/release/extract_changelog.sh
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true
      - uses: ncipollo/release-action@v1
        with:
          artifacts: artifacts/*
          name: NESd ${{ needs.build-macos.outputs.release_name }}
          body: ${{ steps.env.outputs.changes }}
          artifactErrorsFailBuild: true
