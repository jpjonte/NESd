name: CI pipeline
on: [push]
jobs:
  build-macos:
    runs-on: macos-latest
    outputs:
      release_name: ${{ steps.env.outputs.release_name }}
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.GAMEPADS_PRIVATE_KEY }}
            ${{ secrets.MP_AUDIO_STREAM_PRIVATE_KEY }}
      - run: ci/build/prepare.sh
      - run: ci/build/macos/prepare.sh
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      - run: ci/build/macos/build.sh
      - id: env
        run: ci/build/env.sh
      - run: mv ${{ steps.env.outputs.dist_path }}/*.dmg ./${{ steps.env.outputs.macos_artifact }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.env.outputs.macos_artifact }}
          path: ${{ steps.env.outputs.macos_artifact }}
          if-no-files-found: error

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.GAMEPADS_PRIVATE_KEY }}
            ${{ secrets.MP_AUDIO_STREAM_PRIVATE_KEY }}
      - run: ci/build/prepare.sh
      - run: ci/build/linux/prepare.sh
      - run: ci/build/linux/build.sh
      - id: env
        run: ci/build/env.sh
      - run: |
          mv ${{ steps.env.outputs.dist_path }}/*.deb ./${{ steps.env.outputs.linux_deb_artifact }}
          mv ${{ steps.env.outputs.dist_path }}/*.rpm ./${{ steps.env.outputs.linux_rpm_artifact }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.env.outputs.linux_deb_artifact }}
          path: ${{ steps.env.outputs.linux_deb_artifact }}
          if-no-files-found: error
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.env.outputs.linux_rpm_artifact }}
          path: ${{ steps.env.outputs.linux_rpm_artifact }}
          if-no-files-found: error

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - run: ci/build/windows/prepare.ps1
      - run: ci/build/windows/build.ps1
      - id: env
        shell: bash
        run: |
          alias yq="/C/ProgramData/chocolatey/lib/yq/tools/yq.exe"
          ci/build/env.sh
      - uses: thedoctor0/zip-release@0.7.5
        with:
          directory: ${{ steps.env.outputs.windows_path }}
          filename: ${{ steps.env.outputs.windows_artifact }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.env.outputs.windows_artifact }}
          path: ${{ steps.env.outputs.windows_path }}/${{ steps.env.outputs.windows_artifact }}
          if-no-files-found: error

  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - run: ci/build/prepare.sh
      - run: ci/build/android/prepare.sh
        env:
          KEY_STORE_BASE64: ${{ secrets.ANDROID_KEY_STORE }}
          KEY_PROPERTIES: ${{ secrets.ANDROID_KEY_PROPERTIES }}
      - run: ci/build/android/build.sh
      - id: env
        run: ci/build/env.sh
      - run: mv ${{ steps.env.outputs.android_path }} ./${{ steps.env.outputs.android_artifact }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.env.outputs.android_artifact }}
          path: ${{ steps.env.outputs.android_artifact }}
          if-no-files-found: error

  release_nightly:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [build-macos, build-linux, build-windows, build-android]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - run: ci/release/extract_changelog_nightly.sh
      - run: echo "${{ steps.env.outputs.changes }}"
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true
      - uses: ncipollo/release-action@v1
        with:
          artifacts: artifacts/*
          name: NESd nightly
          tag: nightly
          body: ${{ steps.env.outputs.changes }}
          artifactErrorsFailBuild: true
          prerelease: true
          allowUpdates: true
          removeArtifacts: true

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [build-macos, build-linux, build-windows, build-android]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - run: ci/release/extract_changelog.sh
      - run: echo "${{ steps.env.outputs.changes }}"
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true
      - uses: ncipollo/release-action@v1
        with:
          artifacts: artifacts/*
          name: NESd ${{ needs.build-macos.outputs.release_name }}
          body: ${{ steps.env.outputs.changes }}
          artifactErrorsFailBuild: true
